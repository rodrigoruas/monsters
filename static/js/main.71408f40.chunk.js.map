{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","Math","floor","random","monster","name","email","CardList","console","log","monsters","map","id","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","string","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,G,YAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BC,KAAKC,MAAsB,IAAhBD,KAAKE,UAA1C,4BACpB,mCAAON,EAAMO,QAAQC,KAArB,OACA,kCAAMR,EAAMO,QAAQE,cCJfC,EAAW,SAACV,GAEvB,OADAW,QAAQC,IAAIZ,GAEV,qBAAKC,UAAU,YAAf,SACGD,EAAMa,SAASC,KAAI,SAAAP,GAAO,OACzB,cAAC,EAAD,CAAwBA,QAASA,GAArBA,EAAQQ,UCNfC,G,YAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACvB,uBACAjB,UAAU,SACVkB,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCqCGG,E,kDArCb,aAAe,IAAD,8BACZ,gBAaFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXC,OAAQ,kBACRf,SAAU,GACVW,YAAa,IALH,E,gEASO,IAAD,OAClBK,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAAEV,SAAUoB,S,+BAMnC,IAAD,EAC2BC,KAAKP,MAA/Bd,EADD,EACCA,SAAUW,EADX,EACWA,YAGZW,EAAmBtB,EAASuB,QAAO,SAAA7B,GAAO,OAC9CA,EAAQC,KAAK6B,cAAcC,SAASd,EAAYa,kBAClD,OACE,sBAAKpC,UAAU,MAAf,UACE,gDACA,cAAC,EAAD,CACEgB,YAAY,oBACZC,aAAcgB,KAAKhB,eAErB,cAAC,EAAD,CAAUL,SAAUsB,W,GAhCVI,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.71408f40.chunk.js","sourcesContent":["import React from 'react';\nimport './card.style.css'\n\nexport const Card = (props) => {\n  return (\n    <div className='card-container'>\n      <img alt='monster' src={`https://robohash.org/${Math.floor(Math.random() * 100)}?set=set2&size=180x180`}></img>\n        <h2> { props.monster.name} </h2>\n        <p> { props.monster.email }</p>\n    </div>\n  )\n};","import React from 'react';\nimport './card-list.style.css'\nimport { Card } from '../card/card.component';\n\nexport const CardList = (props) => {\n  console.log(props);\n  return (\n    <div className='card-list'>\n      {props.monsters.map(monster => ( \n        <Card  key={monster.id} monster={monster}/>\n      ))}\n    </div>\n  )\n};","import React from 'react';\nimport './search-box.style.css';\n\nexport const SearchBox = ({placeholder, handleChange}) => (\n  <input \n  className=\"search\"\n  type=\"search\" \n  placeholder={placeholder}\n  onChange={handleChange} \n/>\n);","import React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport './App.css';\nimport { SearchBox } from './components/search-box/search-box.component';\n\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      string: 'Hello Rodrigo!!',\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }))\n  }\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value })\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    // const monsters = this.state.monsters;\n    // const searchField = this.state.searchField;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return (\n      <div className=\"App\">\n        <h1>Monster List! </h1>\n        <SearchBox \n          placeholder='Search monsters..'\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} /> \n      </div> \n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}